name: Python Lint
description: GitHub Action that lints a Python based repository
inputs:
  checkout-repo:
    required: false
    description: Perform checkout as first step of action
    default: "true"
  github-token:
    required: true
    description: GitHub token that can checkout the repository. e.g. 'secrets.GITHUB_TOKEN'
    default: ""
  release-notes:
    required: false
    description: Whether to generate release notes for the pull request
    default: "true"
  install-poetry:
    required: false
    description: Whether to install poetry
    default: "false"

runs:
  using: composite
  steps:
    - name: Authorize
      uses: open-turo/action-git-auth@v2
      if: inputs.github-token != ''
      with:
        github-personal-access-token: ${{ inputs.github-token }}
    - name: Checkout
      uses: actions/checkout@v4
      if: inputs.checkout-repo == 'true'
      with:
        fetch-depth: 0
    - name: Install Poetry
      if: inputs.install-poetry == 'true'
      run: |
        pipx install poetry
        pipx ensurepath
        poetry env use 3.11
        #generate output for debugging
        echo "::debug::Poetry version: $(poetry --version)"
        echo "::debug::pipx version: $(pipx --version)"
        echo "::debug::pipx path: $(pipx --path)"
      shell: bash
    - name: Run pre-commit
      uses: open-turo/action-pre-commit@v3
