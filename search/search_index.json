{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Actions Python","text":"<p> <p>     GitHub Action for `python` based repositories. It uses `pip` as package manager.     </p> </p> <p> </p> <p>Documentation: https://open-turo.github.io/actions-python/</p> <p>Source Code: https://github.com/open-turo/actions-python</p>"},{"location":"#actions","title":"Actions","text":""},{"location":"#action-lint","title":"action: <code>lint</code>","text":"<p>Lint will run pre-commit linters against the consumer repository, optionally checking out to to the consumer repository.</p> <p>See usage here.</p> <p>Documentation is found here.</p>"},{"location":"#action-test","title":"action: <code>test</code>","text":"<p>Test will run tests in the consumer repository using pytest. This action will also check out the repository if <code>checkout-repo</code> is passed, as well as <code>pip install .[dev]</code> and <code>pip install .[test]</code> for dependencies.</p> <p>See usage here.</p> <p>Documentation is found here.</p>"},{"location":"#action-release","title":"action: <code>release</code>","text":"<p>Release will optionally checkout the consumer repository and attempt a Semantic Release using the root level configuration file (e.g. .releaserc.json) indicating branches and plugins to use to facilitate the release.</p> <p>See usage here.</p> <p>Documentation is found here.</p>"},{"location":"#get-help","title":"Get Help","text":"<p>Each Action has a detailed README for how to use it as referenced above. Please review Issues, post new Issues against this repository as needed.</p>"},{"location":"lint/","title":"Lint","text":""},{"location":"lint/#description","title":"Description","text":"<p>GitHub Action that lints a python based repository</p>"},{"location":"lint/#usage","title":"Usage","text":"<pre><code>jobs:\n  build:\n    steps:\n      - name: Lint\n        uses: open-turo/actions-python/lint@v1\n        with:\n          ## example value for github-token provided below\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>"},{"location":"lint/#inputs","title":"Inputs","text":"parameter description required default checkout-repo Perform checkout as first step of action <code>false</code> true pypi-token PyPI token that can checkout the repository as well as create tags/releases against it. e.g. 'secrets.PYPI_TOKEN' <code>false</code> github-token GitHub token that can checkout the repository. e.g. 'secrets.GITHUB_TOKEN' <code>true</code> ${{ github.token }}"},{"location":"lint/#runs","title":"Runs","text":"<p>This action is an <code>composite</code> action.</p>"},{"location":"lint/#lint-checks","title":"Lint Checks","text":"<p>This action runs pre-commit.</p>"},{"location":"lint/#notes","title":"Notes","text":"<ul> <li>By default, this action will perform actions/checkout as its first step.</li> <li>This expects that <code>.commitlintrc.yaml</code> will be present to enforce <code>conventional-commit</code>.</li> </ul>"},{"location":"release/","title":"Release","text":""},{"location":"release/#description","title":"Description","text":"<p>GitHub Action that publishes a new release.</p>"},{"location":"release/#configuration","title":"Configuration","text":""},{"location":"release/#step1-set-any-semantic-release-configuration-in-your-repository","title":"Step1: Set any Semantic Release Configuration in your repository.","text":""},{"location":"release/#step2-add-secrets-in-your-repository-for-the-semantic-release-authentication-environment-variables","title":"Step2: Add Secrets in your repository for the Semantic Release Authentication Environment Variables.","text":""},{"location":"release/#step3-add-a-workflow-file-to-your-repository-to-create-custom-automated-processes","title":"Step3: Add a Workflow File to your repository to create custom automated processes.","text":""},{"location":"release/#usage","title":"Usage","text":"<pre><code>steps:\n  - name: Release\n    uses: open-turo/actions-python/release@v1\n    with:\n      ## example value for github-token provided below\n      github-token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre> <p>IMPORTANT: <code>GITHUB_TOKEN</code> does not have the required permissions to operate on protected branches. If you are using this action for protected branches, replace <code>GITHUB_TOKEN</code> with Personal Access Token. If using the <code>@semantic-release/git</code> plugin for protected branches, avoid persisting credentials as part of <code>actions/checkout@v3</code> by setting the parameter <code>persist-credentials: false</code>. This credential does not have the required permission to operate on protected branches.</p>"},{"location":"release/#inputs","title":"Inputs","text":"parameter description required default checkout-repo Perform checkout as first step of action <code>false</code> true dry-run Whether to run semantic release in <code>dry-run</code> mode. It will override the <code>dryRun</code> attribute in your configuration file <code>false</code> <code>false</code> extra-plugins Extra plugins for pre-install. You can also specify specifying version range for the extra plugins if you prefer. <code>false</code> github-token GitHub token that can checkout the repository as well as create tags/releases against it. e.g. 'secrets.GITHUB_TOKEN' <code>true</code>"},{"location":"release/#outputs","title":"Outputs","text":"parameter description new-release-published Whether a new release was published new-release-version Version of the new release new-release-major-version Major version of the new release"},{"location":"release/#runs","title":"Runs","text":"<p>This action is an <code>composite</code> action.</p>"},{"location":"release/#additional-examples","title":"Additional Examples","text":""},{"location":"release/#extra-plugins-example","title":"extra-plugins example","text":"<p>The Action can be used with <code>extra-plugins</code> option to specify plugins which are not in the default list of plugins of semantic release. When using this option, please make sure that these plugins are also mentioned in your semantic release config's plugins array.</p> <p>For example, if you want to use <code>@semantic-release/git</code> and <code>@semantic-release/changelog</code> extra plugins, these must be added to <code>extra-plugins</code> in your actions file and <code>plugins</code> in your release config file as shown bellow:</p> <p>Github Action Workflow:</p> <pre><code>steps:\n  - name: Release\n    uses: open-turo/actions-python/release@v1\n    with:\n      # You can specify specifying version range for the extra plugins if you prefer.\n      github-token: ${{ secrets.GITHUB_TOKEN }}\n      extra-plugins: |\n        @semantic-release/changelog@3.0.0\n        @semantic-release/git\n</code></pre> <p>Similar to parameter <code>semantic_version</code>. It is recommended to manually specify a version of semantic-release plugins to prevent errors caused.</p> <p>Release Config:</p> <pre><code>  plugins: [\n    .\n+   \"@semantic-release/changelog\"\n+   \"@semantic-release/git\",\n  ]\n</code></pre>"},{"location":"release/#dry-run-example","title":"dry-run example","text":"<pre><code>jobs:\n  build:\n    steps:\n      - name: Release\n        uses: open-turo/actions-python/release@v1\n        with:\n          dry-run: true\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>"},{"location":"release/#using-output-parameters-example","title":"using output parameters example","text":"<pre><code>jobs:\n  build:\n    steps:\n      - name: Release\n        uses: open-turo/actions-python/release@v1\n        id: semantic # Need an `id` for output variables\n        with:\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n      - name: Do something when a new release published\n        if: steps.semantic.outputs.new-release-published == 'true'\n        run: |\n          echo ${{ steps.semantic.outputs.new-release-version }}\n          echo ${{ steps.semantic.outputs.new-release-major-version }}\n</code></pre>"},{"location":"release/#notes","title":"Notes","text":"<ul> <li>By default, this action will perform actions/checkout as its first step.</li> </ul>"},{"location":"test/","title":"Test","text":""},{"location":"test/#description","title":"Description","text":"<p>GitHub Action for running tests in a Python repository using pytest. This action will also check out the repository if <code>checkout-repo</code> is passed, as well as <code>pip install .[dev]</code> and <code>pip install .[test]</code> for dependencies.</p>"},{"location":"test/#usage","title":"Usage","text":"<pre><code>jobs:\n  test:\n    steps:\n      - name: Test\n        uses: open-turo/actions-python/test@v1\n        with:\n          ## example value for github-token provided below\n          github-token: ${{ secrets.GITHUB_TOKEN }}\n</code></pre>"},{"location":"test/#inputs","title":"Inputs","text":"parameter description required default checkout-repo Perform checkout as first step of action <code>false</code> true github-token GitHub token that can checkout the repository. e.g. 'secrets.GITHUB_TOKEN' <code>true</code> ${{ github.token }} pypi-token PyPI token that can checkout the repository as well as create tags/releases against it. e.g. 'secrets.PYPI_TOKEN' <code>false</code> test-flags Flags and args for test command <code>false</code>"},{"location":"test/#runs","title":"Runs","text":"<p>This action is an <code>composite</code> action.</p>"},{"location":"test/#test_1","title":"Test","text":"<p>It will run:</p> <pre><code>pytest ${test-flags}\n</code></pre>"},{"location":"test/#notes","title":"Notes","text":"<ul> <li>By default, this action will perform actions/checkout as its first step.</li> </ul>"}]}